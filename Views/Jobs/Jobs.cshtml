@model List<hirelink.Models.Job>

    @{
    ViewData["Title"] = "Jobs";
    var errorMessage = TempData["errorMessage"]?.ToString();
    var successMessage = TempData["successMessage"]?.ToString();
    string role = Context.Session.GetString("Role");
    }


    <!--   -->
    @if(successMessage != null || errorMessage != null){

    <div x-data="{ show:true }" x-show="show" xx-transition:enter="transition ease-in-out duration-300"
        x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100"
        x-transition:leave="transition ease-in-out duration-300" x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0" class="relative z-10">

        <!-- back drop -->
        <div x-on:click.away="show = false" class="fixed inset-0 bg-stone-600 bg-opacity-75 transition-opacity"></div>

        <div class="fixed inset-0 z-10 overflow-y-auto">
            <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                @if(successMessage != null){
                <div
                    class="relative transform overflow-hidden rounded-lg bg-white dark:bg-neutral-900 px-4 pt-5 pb-4 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-sm sm:p-6">
                    <div>
                        <div
                            class="mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-green-500 dark:bg-green-500 text-white">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"
                                class="w-10 h-10">
                                <path fill-rule="evenodd"
                                    d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z"
                                    clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="mt-3 text-center sm:mt-5">
                            <div class="mt-2">
                                <p class="text-base text-neutral-700 dark:text-neutral-200">@TempData["successMessage"]
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="mt-5 sm:mt-6">
                        <button type="button" x-on:click="open = false"
                            class="inline-flex w-full justify-center rounded-md border border-transparent bg-emerald-500 px-4 py-2 text-base font-medium text-neutral-800 shadow-sm hover:bg-emerald-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2 sm:text-sm">OK..!</button>
                    </div>
                </div>
                }else

                if(errorMessage != null){
                <div
                    class="relative transform overflow-hidden rounded-lg bg-white dark:bg-neutral-900 px-4 pt-5 pb-4 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-sm sm:p-6">
                    <div>
                        <div
                            class="mx-auto flex h-14 w-14 items-center justify-center rounded-full bg-rose-100 dark:bg-rose-500 text-red-200 ">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"
                                class="w-10 h-10">
                                <path fill-rule="evenodd"
                                    d="M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z"
                                    clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="mt-3 text-center sm:mt-5">
                            <div class="mt-2">
                                <p class="text-base text-neutral-700 dark:text-neutral-200">@TempData["errorMessage"]
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="mt-5 sm:mt-6">
                        <button type="button" x-on:click="open = false"
                            class="inline-flex w-full justify-center rounded-md border border-transparent bg-rose-500 px-4 py-2 text-base font-medium text-red-100 shadow-sm hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-rose-500 focus:ring-offset-2 sm:text-sm">OK..!</button>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
    }




    <div class="container px-6 gap-y-6 grid">


        <!-- large Filters-->
        <div class="mt-6 hidden md:block bg-white dark:bg-neutral-800 rounded-lg shadow-md focus:outline-none">
            <div
                class="flex flex-col items-center justify-end md:justify-between p-4 space-y-3 md:flex-row md:space-y-0 md:space-x-4">
                <a asp-action="Create"
                    class="flex items-center justify-between px-4 py-2 text-sm font-medium leading-5 text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple">

                    <span>Create Job</span>
                </a>

                <div
                    class="flex flex-col items-stretch justify-end flex-shrink-0 w-full space-y-2 md:w-auto md:flex-row md:space-y-0 md:items-center md:space-x-3">
                    <p class=" text-base font-normal text-neutral-800 dark:text-neutral-200">Filters</p>

                    <div class="flex items-center">
                        <label for="simple-search" class="sr-only">Search</label>
                        <div class="relative w-full">
                            <label for="simple-search" class="sr-only">Search</label>
                            <div class="relative w-full focus:border-purple-500">
                                <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                                    <svg aria-hidden="true" class="w-5 h-5 text-neutral-500 dark:text-neutral-400"
                                        fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd"
                                            d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                            clip-rule="evenodd"></path>
                                    </svg>
                                </div>
                                <input type="text" id="searchJobTitle" class="wide-input" placeholder="Search"
                                    required="">
                            </div>
                        </div>
                    </div>
                    <div class="flex items-center w-full space-x-3 md:w-auto">
                        <select class="form-select" id="jobStatusFilter">
                            <option value="All">All Jobs </option>
                            <option value="Open" selected>Open Jobs </option>
                            <option value="Closed">Closed Jobs </option>
                        </select>

                        <select id="jobTypeFilter" class="form-select">
                            <option value="All">All</option>
                            <option value="Full-time">Full-time</option>
                            <option value="Intern">Intern</option>
                            <option value="Contract">Contract</option>
                        </select>

                    </div>
                </div>
            </div>
        </div>


        <!-- Mobile filter -->
        <div class="mt-6  md:hidden bg-white dark:bg-neutral-800 rounded-lg shadow-md focus:outline-none">

            <div class="flex flex-col items-center justify-between p-4 space-y-3 md:flex-row md:space-y-0 md:space-x-4">
                <div class="w-full  flex flex-row items-center justify-between">

                    <p class=" text-base font-semibold text-neutral-800 dark:text-neutral-200">Filters</p>

                    <a asp-action="Create"
                        class="flex items-center text-center px-4 py-2 text-sm font-medium leading-5 text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple">

                        <span>Create Job</span>
                    </a>
                </div>

                <div class="w-full md:w-1/2">
                    <form class="flex items-center">
                        <label for="simple-search" class="sr-only">Search</label>
                        <div class="relative w-full">
                            <label for="simple-search" class="sr-only">Search</label>
                            <div class="relative w-full focus:border-purple-500">
                                <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                                    <svg aria-hidden="true" class="w-5 h-5 text-neutral-500 dark:text-neutral-400"
                                        fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd"
                                            d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                            clip-rule="evenodd"></path>
                                    </svg>
                                </div>
                                <input type="text" id="mobilesearchFilter" class="wide-input" placeholder="Search"
                                    required="">
                            </div>
                        </div>
                    </form>
                </div>

                <div
                    class="flex flex-col items-stretch justify-end flex-shrink-0 w-full space-y-2 md:w-auto md:flex-row md:space-y-0 md:items-center md:space-x-3">

                    <div class="flex items-center w-full space-x-3 md:w-auto">
                        <select class="form-select w-full" id="mobilejobStatusFilter">
                            <option value="All">All Jobs </option>
                            <option value="Open" selected>Open Jobs </option>
                            <option value="Closed">Closed Jobs </option>
                        </select>
                        <select id="mobilejobTypeFilter" class="form-select w-full">
                            <option value="All">All</option>
                            <option value="Full-time">Full-time</option>
                            <option value="Intern">Intern</option>
                            <option value="Contract">Contract</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>


        <!-- Job Cards -->
        <div class="grid gap-6  mb-8 sm:grid-cols-2 lg:grid-cols-3 items-center " id="gridContainer">

            @foreach (var item in Model) {

            <!-- Job Card start -->
            <div data-job-title="@item.JobTitle" data-job-status=@item.JobStatus data-job-type=@item.JobType
                data-job-postedBy="@item.PostedBy" data-job-location="@item.Location"
                data-job-department="@item.Department"
                class="flex flex-col p-4 bg-white border border-neutral-100 rounded-lg shadow-sm hover:shadow-md  h-fit  dark:border-0 dark:bg-neutral-800  card"
                style="display: block;">
                <div class="flex flex-col-reverse gap-y-2 justify-between">
                    <p
                        class="text-sm md:text-base font-semibold capitalize text-neutral-700 dark:text-neutral-200 tracking-[-.05em">
                        @item.JobTitle
                    </p>

                    <div class="flex flex-row justify-between">

                        @if (item.JobStatus == "Open") {
                        <a asp-controller="Jobs" asp-action="Index" asp-route-jobId="@item.JobId"
                            class="w-fit  inline-flex items-center text-sm py-1 px-2 rounded-md font-semibold leading-relaxed bg-green-100 text-green-600 dark:text-white dark:bg-green-700 hover:bg-green-200 cursor-pointer">
                            SRF ID : @item.JobId
                        </a>
                        } else {
                        <a asp-controller="Jobs" asp-action="Index" asp-route-jobId="@item.JobId"
                            class="w-fit  inline-flex items-center  py-1.5 px-3 rounded-md text-sm font-semibold leading-relaxed bg-red-100 text-red-600 dark:text-white dark:bg-red-700 hover:bg-red-200 cursor-pointer">
                            SRF
                            ID : @item.JobId
                        </a>
                        }

                        <div class="relative" x-data="{ open: false }">
                            <button x-on:click="open = true"
                                class="inline-flex items-center justify-center gap-2 px-1 py-1 text-sm font-medium align-middle bg-white border rounded-md shadow-sm hs-dropdown-toggle text-neutral-700 hover-bg-neutral-200 hover:bg-neutral-50 focus:outline-none focus:ring-1 focus:ring-purple-600 dark:bg-neutral-800 dark:hover:bg-neutral-800 dark:border-neutral-700 dark:text-neutral-400 dark:hover:text-white dark:focus:ring-offset-bg-neutral-800">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                    class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                                    <path
                                        d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z">
                                    </path>
                                </svg>
                            </button>
                            <div class="absolute right-0 z-50 mt-2 w-40 origin-top-right rounded-md bg-neutral-50  dark:bg-neutral-700  shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
                                role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1"
                                x-transition:leave="transition ease-in-out duration-150"
                                x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" x-show="open"
                                x-on:click.away="open = false" x-on:click.away="openDropdown = false ">
                                <div class="p-1" role="none">
                                    <a asp-action="Edit" asp-route-id="@item.JobId"
                                        class="text-gray-700 dark:text-neutral-200 block px-4 py-2 text-sm hover:bg-neutral-200 dark:hover:bg-neutral-600"
                                        role="menuitem" tabindex="-1" id="menu-item-0">Edit Job </a>
                                    <a asp-action="Details" asp-route-id="@item.JobId"
                                        class="text-gray-700 dark:text-neutral-200 block px-4 py-2 text-sm hover:bg-neutral-200 dark:hover:bg-neutral-600"
                                        role="menuitem" tabindex="-1" id="menu-item-1">View Job</a>

                                    @if (item.JobStatus == "Open") {
                                    <form action="/jobs/updatestatus" method="post">
                                        <input value="@item.JobId" name="jobID" class="hidden">
                                        <input value="Closed" name="newJobStatus" class="hidden">
                                        <input value="@User.Identity.Name" name="UpdatedBy" class="hidden">
                                        <button type="submit" tabindex="-1"
                                            class="inline-flex  items-center justify-between w-full px-2 py-1 text-sm font-medium text-red-500 transition-colors duration-150 bg-red-100 rounded-md hover:bg-red-200 dark:hover:bg-red-800 dark:hover:text-red-200 dark:bg-red-500 dark:text-red-100">
                                            <span>Close Hiring</span>
                                        </button>
                                    </form>
                                    } else {
                                    <form action="/jobs/updatestatus" method="post">
                                        <input value="@item.JobId" name="jobID" class="hidden">
                                        <input value="Open" name="newJobStatus" class="hidden">
                                        <input value="@User.Identity.Name" name="updatedBy" class="hidden">
                                        <button type="submit" tabindex="-1"
                                            class="text-gray-700 block w-full px-4 py-2 text-left text-sm bg-green-100 rounded-md hover:bg-green-200 dark:hover:bg-green-800 dark:hover:text-green-200 dark:bg-green-600 dark:text-green-300">
                                            <span>Reopen Hiring</span>
                                        </button>
                                    </form>
                                    }
                                </div>
                            </div>

                        </div>
                    </div>


                </div>

                <div class="cursor-pointer" onclick="location.href='/Jobs/@item.JobId';">
                    <p class="mb-2 text-sm font-medium text-neutral-600 dark:text-neutral-400">
                        @item.Department , @item.Location
                    </p>



                    @if (item.JobStatus == "Open" && (item.ClosedOn == null || item.ClosedBy == null)) {
                    <div class="flex flex-col lg:flex-row lg:justify-between w-full  gap-x-4">
                        <p class="mt-2 text-xs dark:text-white text-neutral-700">
                            Posted On: @item.PostedOn.ToString("dd MMM yyyy")</p>
                        <p class="mt-2 text-xs dark:text-white text-neutral-700">Posted By: @item.PostedBy</p>
                    </div>
                    } else if (item.JobStatus == "Open") {
                    <div class="flex flex-col lg:flex-row lg:justify-between w-full  gap-x-4">
                        <p class="mt-2 text-xs dark:text-white text-neutral-700">
                            Reopened On: @item.PostedOn.ToString("dd MMM yyyy")</p>
                        <p class="mt-2 text-xs dark:text-white text-neutral-700">Reopened By: @item.PostedBy</p>
                    </div>
                    } else {
                    <div class="flex flex-col lg:flex-row lg:justify-between w-full  gap-x-4">
                        <p class="mt-2 text-xs dark:text-white text-neutral-700">Closed On: @item.ClosedOn</p>
                        <p class="mt-2 text-xs dark:text-white text-neutral-700">Closed By: @item.ClosedBy</p>
                    </div>
                    }
                </div>





                <div onclick="location.href='/Jobs/@item.JobId';"
                    class="flex items-center justify-between mt-3 cursor-pointer">
                    <div
                        class="grid grid-cols-3 w-full sm:w-fit grid-flow-row md:flex md:justify-between px-0 py-4 sm:py-0 sm:px-0 dark:text-neutral-100 ">
                        <div class="flex flex-col items-center md:w-24 xs:mr-8 ">
                            <h5 class="text-lg font-bold text-neutral-700 dark:text-neutral-400 text-desaturatedBlue">
                                @item.CandidateCount
                            </h5>
                            <p class="mt-1 text-xs tracking-widest font-body text-darkneutral sm:text-xs">
                                CANDIDATES
                            </p>
                        </div>
                        <div class="flex flex-col items-center md:w-24 xs:mr-8">
                            <h5 class="text-lg font-bold text-neutral-700 dark:text-neutral-400 text-desaturatedBlue">
                                @item.HiredCount
                            </h5>
                            <p class="mt-1 text-xs tracking-widest font-body text-darkneutral">HIRED</p>
                        </div>
                        <div class="flex flex-col items-center md:w-24 xs:mr-8">
                            <h5 class="text-lg font-bold text-neutral-700 dark:text-neutral-400 text-desaturatedBlue">
                                @item.RejectedCount
                            </h5>
                            <p class="mt-1 text-xs tracking-widest font-body text-darkneutral">REJECTED</p>
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>

        <!-- Alert to show no jobs to display -->

        <div id="noItemsMessage"
            class=" hidden bg-neutral-200  w-fit border border-neutral-200 text-sm text-neutral-600 rounded-md p-4 dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-300 mx-auto  justify-center items-center"
            role="alert">
            <div class="flex justify-center items-center">
                <div class="flex-shrink-0">
                    <svg class="h-4 w-4 text-neutral-500 mt-0.5" xmlns="http://www.w3.org/2000/svg" width="16"
                        height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path
                            d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
                    </svg>
                </div>
                <div class="flex-1 md:flex md:justify-between ml-6">
                    <p class="text-sm text-neutral-700 dark:text-neutral-300">
                        No jobs to display with this filters.!
                    </p>
                </div>
            </div>
        </div>

    </div>

    @section Scripts{

    <script>

        // Filter initially to show only jobs with data-job-status="Open"
        const jobs = document.querySelectorAll('[data-job-status]');
        jobs.forEach((job) => {
            if (job.getAttribute('data-job-status').toLowerCase() !== 'open') {
                job.style.display = 'none';
            }
        });

        const searchJobTitle = document.getElementById('searchJobTitle');
        const jobStatusFilter = document.getElementById('jobStatusFilter');
        const jobTypeFilter = document.getElementById('jobTypeFilter');


        function filterJobs() {
            const searchQuery = searchJobTitle.value.toLowerCase();
            const selectedJobStatus = jobStatusFilter.value.toLowerCase();
            const selectedJobType = jobTypeFilter.value.toLowerCase();

            const jobs = document.querySelectorAll('.card');
            let visibleCardCount = 0;

            jobs.forEach((job) => {
                const jobTitle = job.getAttribute('data-job-title').toLowerCase();
                const jobStatus = job.getAttribute('data-job-status').toLowerCase();
                const jobType = job.getAttribute('data-job-type').toLowerCase();
                const jobPostedBy = job.getAttribute('data-job-postedBy').toLowerCase();
                const jobLocation = job.getAttribute('data-job-location').toLowerCase();
                const jobDepartment = job.getAttribute('data-job-department').toLowerCase();

                const shouldShowJob =
                    jobTitle.includes(searchQuery) ||
                    jobDepartment.includes(searchQuery) ||
                    jobPostedBy.includes(searchQuery) ||
                    jobLocation.includes(searchQuery);

                if (
                    shouldShowJob && (
                        (selectedJobStatus === 'all' || jobStatus === selectedJobStatus) &&
                        (selectedJobType === 'all' || jobType === selectedJobType))) {
                    job.style.display = 'block';
                    visibleCardCount++;
                } else {
                    job.style.display = 'none';
                }
            });

            // Show or hide the message based on the visible card count
            const noItemsMessage = document.getElementById('noItemsMessage');
            noItemsMessage.classList.toggle('hidden', visibleCardCount > 0);
        }



        searchJobTitle.addEventListener('input', filterJobs);
        jobStatusFilter.addEventListener('change', filterJobs);
        jobTypeFilter.addEventListener('change', filterJobs);


        // Mobile filtering
        const mobilesearchJobTitle = document.getElementById('mobilesearchFilter');
        const mobilejobStatusFilter = document.getElementById('mobilejobStatusFilter');
        const mobilejobTypeFilter = document.getElementById('mobilejobTypeFilter');

        function mobilefilterJobs() {
            const searchQuery = mobilesearchJobTitle.value.toLowerCase();
            const selectedJobStatus = mobilejobStatusFilter.value.toLowerCase();
            const selectedJobType = mobilejobTypeFilter.value.toLowerCase();

            const jobs = document.querySelectorAll('.card');
            let visibleCardCount = 0;

            jobs.forEach((job) => {
                const jobTitle = job.getAttribute('data-job-title').toLowerCase();
                const jobStatus = job.getAttribute('data-job-status').toLowerCase();
                const jobType = job.getAttribute('data-job-type').toLowerCase();
                const jobPostedBy = job.getAttribute('data-job-postedBy').toLowerCase();
                const jobLocation = job.getAttribute('data-job-location').toLowerCase();
                const jobDepartment = job.getAttribute('data-job-department').toLowerCase();

                const shouldShowJob =
                    jobTitle.includes(searchQuery) ||
                    jobDepartment.includes(searchQuery) ||
                    jobPostedBy.includes(searchQuery) ||
                    jobLocation.includes(searchQuery);

                if (
                    shouldShowJob && (
                        (selectedJobStatus === 'all' || jobStatus === selectedJobStatus) &&
                        (selectedJobType === 'all' || jobType === selectedJobType))) {
                    job.style.display = 'block';
                    visibleCardCount++;
                } else {
                    job.style.display = 'none';
                }
            });

            // Show or hide the message based on the visible card count
            const noItemsMessage = document.getElementById('noItemsMessage');
            noItemsMessage.classList.toggle('hidden', visibleCardCount > 0);
        }


        mobilesearchJobTitle.addEventListener('input', mobilefilterJobs);
        mobilejobStatusFilter.addEventListener('change', mobilefilterJobs);
        mobilejobTypeFilter.addEventListener('change', mobilefilterJobs);



    </script>
    }