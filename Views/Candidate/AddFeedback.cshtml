@{
var CandidateId = ViewContext.RouteData.Values["id"]?.ToString();
ViewData["Title"] = "AddFeedback";
}


<div class="container px-6 lg:px-32">
    <div class="lg:grid lg:grid-cols-12 lg:gap-x-5 my-2 lg:mt-10">
        <aside class="py-6 px-2 sm:px-6 lg:col-span-3 lg:py-0 lg:px-0">
            <div>
                <h3 class="text-lg font-medium leading-6 text-gray-900 dark:text-neutral-200">Add Interview
            </div>
            <a asp-Controller="Candidate" asp-action="Index" asp-route-id="@CandidateId"
                class="text-teal-500 block mb-4 lg:mt-6 lg:mb-0">
                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="h-5 w-5  inline-block scale-150"
                    viewBox="0 0 32 32" stroke-width="1.5">
                    <path
                        d="M12,9.059V6.5c0-0.256-0.098-0.512-0.293-0.708C11.512,5.597,11.256,5.5,11,5.5s-0.512,0.097-0.707,0.292L4,12l6.293,6.207  C10.488,18.402,10.744,18.5,11,18.5s0.512-0.098,0.707-0.293S12,17.755,12,17.5v-2.489c2.75,0.068,5.755,0.566,8,3.989v-1  C20,13.367,16.5,9.557,12,9.059z" />
                </svg> <span>Back </span>
            </a>
        </aside>
        <form action="/Candidate/AddFeedback/@CandidateId" method="post" id="feedbackForm" class="lg:col-span-9 ">
            <input type="hidden" value="@CandidateId" id="candidateId" />
            <input type="hidden" id="userName" value="@User.Identity.Name">


            <div
                class="shadow sm:overflow-hidden sm:rounded-md bg-white dark:bg-neutral-800 rounded-lg focus:outline-none">
                <div class="space-y-6  py-6 px-4 sm:p-6">
                    <div class="grid grid-cols-6 gap-6">
                        <div class="col-span-6 sm:col-span-3 ">
                            <label class="label sm:text-base mb-2">Interviewer Name</label>
                            <input class="form-input mt-1" name="interviewerName" id="interviewerName"
                                placeholder="Enter interviewer name" />
                            <span class="hidden text-red-500 text-sm font-normal"></span>
                        </div>

                        <div class="col-span-6 sm:col-span-3 ">
                            <label class="label sm:text-base mb-2">Interviewer Email</label>
                            <input class="form-input mt-1" type="email" name="interviewerEmail" id="interviewerEmail"
                                placeholder="Enter interviewer email" />
                            <span class="hidden text-red-500 text-sm font-normal"></span>
                        </div>
                    </div>


                    <div class="my-4">
                        <div class="flex flex-row justify-between mb-4">
                            <p class="label sm:text-base">Topics</p>
                            <div id="add-topic-button"
                                class="py-2 px-4 inline-flex justify-center items-center gap-2 rounded-full border border-transparent font-semibold bg-[#7E8233] text-white hover:bg-[#6c6f21] focus:outline-none focus:ring-2 focus:ring-[#7E8233] focus:ring-offset-2 transition-all text-xs dark:focus:ring-offset-neutral-800 cursor-pointer">
                                Add Topic
                            </div>
                        </div>

                        <div id="feedback-topics" class="space-y-4">
                            <div class="grid sm:grid-cols-5 sm:gap-4">
                                <input class="form-input sm:col-span-3 mt-0 " type="text" name="topic1" id="topic1"
                                    placeholder="Enter topic">
                                <div class="flex items-center sm:col-span-2">
                                    <input class="form-input  mt-0 " type="number" min="1" max="10" name="rating1"
                                        id="rating1" placeholder="Enter rating Out of 10">
                                    <svg fill="currentColor" viewBox="0 0 20 20" class="w-7 h-7 opacity-0 mx-3">
                                        <path fill-rule="evenodd"
                                            d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                                            clip-rule="evenodd"></path>
                                    </svg>
                                </div>
                            </div>
                        </div>


                    </div>
                    <div class="my-4">
                        <textarea class="form-input" id="comments" name="comments" placeholder="Share some comments..."
                            rows="3"></textarea>
                    </div>
                </div>


                <div class=" px-4 py-3 text-right sm:px-6">
                    <a type="button" asp-Controller="Candidate" asp-action="Index" asp-route-id="@CandidateId"
                        class="inline-flex justify-center rounded-md border border-transparent bg-neutral-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 cursor-pointer">Cancel</a>

                    <input type="submit" value="Save"
                        class="inline-flex justify-center rounded-md border border-transparent bg-purple-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 cursor-pointer" />
                </div>
            </div>
        </form>
    </div>
</div>


<dialog id="success" class="relative">
    <div xx-transition:enter="transition ease-in-out duration-300" x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in-out duration-300"
        x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" class="relative z-10">

        <!-- back drop -->
        <div class="fixed inset-0 bg-stone-600 bg-opacity-75 transition-opacity"></div>

        <div class="fixed inset-0 z-10 overflow-y-auto">
            <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                <div
                    class="relative transform overflow-hidden rounded-lg bg-white dark:bg-neutral-900 px-4 pt-5 pb-4 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-sm sm:p-6">
                    <div>
                        <div
                            class="mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-green-500 dark:bg-green-500 text-white">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"
                                class="w-10 h-10">
                                <path fill-rule="evenodd"
                                    d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z"
                                    clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="mt-3 text-center sm:mt-5">
                            <div class="mt-2">
                                <p class="text-base text-neutral-700 dark:text-neutral-200">
                                    Interview feedback successfully stored..!
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="mt-5 sm:mt-6">
                        <button type="button" onclick="window.location.href='/Candidate/@CandidateId'"
                            class="inline-flex w-full justify-center rounded-md border border-transparent bg-emerald-500 px-4 py-2 text-base font-medium text-neutral-800 shadow-sm hover:bg-emerald-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2 sm:text-sm">OK..!</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</dialog>



@section Scripts{


<!-- Working of feedback form -->
<script>
    var addTopicButton = document.getElementById("add-topic-button");
    var feedbackForm = document.getElementById("feedback-topics");

    addTopicButton.addEventListener("click", (e) => {
        e.preventDefault();
        var topicCount = document.querySelectorAll("[data-topic]").length + 1;

        var newTopicDiv = document.createElement("div");
        newTopicDiv.classList.add("grid", "sm:grid-cols-5", "sm:gap-4");
        newTopicDiv.setAttribute("data-topic", "topic");

        var newTopicInput = document.createElement("input");
        newTopicInput.classList.add("form-input", "sm:col-span-3", "mt-0");
        newTopicInput.setAttribute("type", "text");
        newTopicInput.setAttribute("name", "topic" + topicCount);
        newTopicInput.setAttribute("id", "topic" + topicCount);
        newTopicInput.setAttribute("placeholder", "Enter topic");
        newTopicInput.setAttribute("required", "true");

        var newRatingDiv = document.createElement("div");
        newRatingDiv.classList.add("flex", "items-center", "sm:col-span-2");

        var newRatingInput = document.createElement("input");
        newRatingInput.classList.add("form-input", "mt-0");
        newRatingInput.setAttribute("type", "number");
        newRatingInput.setAttribute("min", "1");
        newRatingInput.setAttribute("max", "10");
        newRatingInput.setAttribute("name", "rating" + topicCount);
        newRatingInput.setAttribute("id", "rating" + topicCount);
        newRatingInput.setAttribute("placeholder", "Enter rating Out of 10");
        newRatingInput.setAttribute("required", "true");

        var newRemoveButton = document.createElement("button");
        newRemoveButton.innerHTML = `
        <svg fill="currentColor" viewBox="0 0 20 20" class="w-6 h-6 text-rose-600 mx-3" >
            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path>
        </svg>
        `;

        newRatingDiv.appendChild(newRatingInput);
        newRatingDiv.appendChild(newRemoveButton);

        newTopicDiv.appendChild(newTopicInput);
        newTopicDiv.appendChild(newRatingDiv);

        feedbackForm.appendChild(newTopicDiv);

        newRemoveButton.addEventListener("click", function () {
            feedbackForm.removeChild(newTopicDiv);
            updateInputNames();
        });

        updateInputNames();
    });

    function updateInputNames() {
        var topicInputs = document.querySelectorAll("[data-topic] input[type='text']");
        var ratingInputs = document.querySelectorAll("[data-topic] input[type='number']");

        // Update the names of topic inputs
        for (var i = 0; i < topicInputs.length; i++) {
            topicInputs[i].setAttribute("name", "topic" + (i + 2));
            topicInputs[i].setAttribute("id", "topic" + (i + 2));
        }

        // Update the names of rating inputs
        for (var i = 0; i < ratingInputs.length; i++) {
            ratingInputs[i].setAttribute("name", "rating" + (i + 2));
            ratingInputs[i].setAttribute("id", "rating" + (i + 2));
        }
    }

</script>


<!-- Post request of feedback details -->
<script>
    //  Dailog box working script

    function openDialog(dialogId) {
        const dialog = document.getElementById(dialogId);
        dialog.showModal();
    }
    const dialog = document.getElementById("success");

    dialog.addEventListener("keydown", function (event) {
        if (event.key === "Escape") {
            event.preventDefault();
        }
    });


    document.getElementById("feedbackForm").addEventListener("submit", (event) => {
        event.preventDefault(); // Prevent the form from submitting

        let candidateId = document.getElementById("candidateId").value;
        let interviewerName = document.getElementById("interviewerName").value;
        let interviewerEmail = document.getElementById("interviewerEmail").value;
        let comments = document.getElementById("comments").value;
        let userName = document.getElementById("userName").value;

        // Retrieve values from the form
        var topics = [];
        var ratings = [];

        var topicInputs = document.querySelectorAll('input[name^="topic"]');
        var ratingInputs = document.querySelectorAll('input[name^="rating"]');

        topicInputs.forEach(function (input) {
            topics.push(input.value);
        });

        ratingInputs.forEach(function (input) {
            ratings.push(input.value);
        });

        // Pass the values to the action method using AJAX or by submitting the form
        // Here's an example using AJAX with jQuery
        let url = "/Candidate/AddFeedback/" + candidateId;;

        $.ajax({
            url: url,
            method: "POST",
            data: {
                candidateId: candidateId,
                interviewerName: interviewerName,
                interviewerEmail: interviewerEmail,
                topics: topics,
                ratings: ratings,
                comments: comments,
                userName: userName
            },
            success: function (response) {
                openDialog('success');
            },
            error: function (xhr) {
                // Handle errors
                alert('some thing went wrong');

                console.error(xhr);
            }
        });
    });


</script>

}